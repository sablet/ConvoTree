{
  "extends": [
    "next/core-web-vitals",
    "next/typescript"
  ],
  "plugins": ["sonarjs"],
  "rules": {
    // --- 実行時エラーを防ぐ可能性が高いルール ---
    "no-use-before-define": ["error", {
      "functions": false,
      "classes": true,
      "variables": true
    }],
    "no-unreachable": "error",
    "no-constant-condition": ["error", { "checkLoops": true }],
    "no-unsafe-finally": "error",
    "no-implicit-coercion": "warn",
    "no-duplicate-case": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": "error",
    "no-fallthrough": "error",
    "no-func-assign": "error",
    "no-import-assign": "error",
    "no-irregular-whitespace": "error",
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-promise-executor-return": "error",
    "no-prototype-builtins": "error",
    "no-self-assign": "error",
    "no-self-compare": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-this-before-super": "error",
    "no-undef": "error",
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "error",
    "no-unused-private-class-members": "error",
    "no-unused-vars": ["error", {
      "argsIgnorePattern": "^_",
      "varsIgnorePattern": "^_",
      "caughtErrorsIgnorePattern": "^_"
    }],
    "no-useless-backreference": "error",
    "require-atomic-updates": "error",
    "use-isnan": "error",
    "valid-typeof": ["error", { "requireStringLiterals": true }],

    // --- TypeScript 固有の改善ルール ---
    "@typescript-eslint/no-unused-vars": ["error", {
      "argsIgnorePattern": "^_",
      "varsIgnorePattern": "^_",
      "caughtErrorsIgnorePattern": "^_"
    }],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/ban-ts-comment": ["error", {
      "ts-expect-error": "allow-with-description",
      "ts-ignore": false,
      "ts-nocheck": false,
      "ts-check": false
    }],

    // --- Next.js & React 最適化 ---
    "react/jsx-key": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-undef": "error",
    "react/no-children-prop": "error",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-is-mounted": "error",
    "react/no-render-return-value": "error",
    "react/no-string-refs": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/no-unsafe": "error",
    "react/require-render-return": "error",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",

    // --- 品質向上ルール ---
    "prefer-const": "error",
    "no-var": "error",
    "object-shorthand": "warn",
    "prefer-arrow-callback": "warn",
    "prefer-template": "warn",
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "curly": ["warn", "multi-line"],
    "dot-notation": "warn",
    "no-else-return": "warn",
    "no-useless-return": "warn",
    "yoda": "error",

    // --- コード品質メトリクス ---
    "complexity": ["warn", 15],
    "max-depth": ["warn", 4],
    "max-lines": ["warn", {
      "max": 500,
      "skipBlankLines": true,
      "skipComments": true
    }],
    "max-lines-per-function": [
      "warn",
      {
        "max": 150,
        "skipBlankLines": true,
        "skipComments": true
      }
    ],
    "max-statements": ["warn", 50],
    "max-nested-callbacks": ["warn", 3],
    "max-params": ["warn", 5],
    "sonarjs/cognitive-complexity": ["warn", 15],

    // --- 開発時の利便性を考慮した緩和 ---
    "no-empty": ["warn", { "allowEmptyCatch": true }],
    "@typescript-eslint/no-non-null-assertion": "warn",
    "no-unused-vars": "off"
  },
  "env": {
    "browser": true,
    "es2022": true,
    "node": true
  },
  "globals": {
    "React": "readonly",
    "JSX": "readonly"
  },
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx"],
      "rules": {
        "max-lines-per-function": [
          "error",
          {
            "max": 300,
            "skipBlankLines": true,
            "skipComments": true
          }
        ]
      }
    }
  ]
}
